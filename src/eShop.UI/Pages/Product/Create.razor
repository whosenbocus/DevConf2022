@page "/Product/Create"
@inject NavigationManager NavigationManager

<PageTitle>Products</PageTitle>

<h1>Create</h1>

<EditForm Model="@Model" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name: </label>
        <InputText autocomplete="off" Id="name" Class="form-control" @bind-Value="@Model.Name"></InputText>
        <ValidationMessage For="@(() => Model.Name)" />
    </div>

    <div class="form-group">
        <label for="Quantity">Quantity: </label>
        <InputNumber autocomplete="off" Id="Quantity" Class="form-control" @bind-Value="@Model.Quantity"></InputNumber>
        <ValidationMessage For="@(() => Model.Quantity)" />
    </div>

    <div class="form-group">
        <label for="Supplier">Supplier: </label>
        <InputText autocomplete="off" Id="Supplier" Class="form-control" @bind-Value="@Model.Supplier"></InputText>
        <ValidationMessage For="@(() => Model.Supplier)" />
    </div>
    <p></p>
    <button class="btn btn-primary" type="submit">Save</button>

</EditForm>

@code
{
    [Inject]
    public ICatalogService CatalogService { get; set; }
    private ProductCreate Model = new ProductCreate();

    protected async void HandleValidSubmit()
    {
        await CatalogService.CreateProduct(Model);
        NavigationManager.NavigateTo("Product/Index");
    }

}